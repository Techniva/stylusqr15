import { PrismaClient } from '../src/generated/prisma';

const prisma = new PrismaClient();

async function resetAllTableIds() {
  try {
    console.log('üßπ Starting complete database reset...');
    console.log('Clearing all data and resetting auto-increment for all tables...\n');

    // Clear all data from all tables (except AdminUser)
    console.log('üóëÔ∏è  Clearing all data...');
    
    await prisma.adminAction.deleteMany({});
    console.log('‚úÖ AdminAction data cleared');
    
    await prisma.downloadLog.deleteMany({});
    console.log('‚úÖ DownloadLog data cleared');
    
    await prisma.scanLog.deleteMany({});
    console.log('‚úÖ ScanLog data cleared');
    
    await prisma.qRCode.deleteMany({});
    console.log('‚úÖ QRCode data cleared');
    
    await prisma.payment.deleteMany({});
    console.log('‚úÖ Payment data cleared');
    
    await prisma.subscription.deleteMany({});
    console.log('‚úÖ Subscription data cleared');
    
    await prisma.profileUpdateLog.deleteMany({});
    console.log('‚úÖ ProfileUpdateLog data cleared');
    
    await prisma.user.deleteMany({});
    console.log('‚úÖ User data cleared');
    
    await prisma.pricingPlan.deleteMany({});
    console.log('‚úÖ PricingPlan data cleared');

    console.log('\nüîÑ Resetting auto-increment for all tables...');
    
    // Reset auto-increment for all tables
    await prisma.$executeRaw`ALTER TABLE AdminUser AUTO_INCREMENT = 1`;
    console.log('‚úÖ AdminUser auto-increment reset to 1');
    
    await prisma.$executeRaw`ALTER TABLE AdminAction AUTO_INCREMENT = 1`;
    console.log('‚úÖ AdminAction auto-increment reset to 1');
    
    await prisma.$executeRaw`ALTER TABLE User AUTO_INCREMENT = 1`;
    console.log('‚úÖ User auto-increment reset to 1');
    
    await prisma.$executeRaw`ALTER TABLE QRCode AUTO_INCREMENT = 1`;
    console.log('‚úÖ QRCode auto-increment reset to 1');
    
    await prisma.$executeRaw`ALTER TABLE ScanLog AUTO_INCREMENT = 1`;
    console.log('‚úÖ ScanLog auto-increment reset to 1');
    
    await prisma.$executeRaw`ALTER TABLE DownloadLog AUTO_INCREMENT = 1`;
    console.log('‚úÖ DownloadLog auto-increment reset to 1');
    
    await prisma.$executeRaw`ALTER TABLE ProfileUpdateLog AUTO_INCREMENT = 1`;
    console.log('‚úÖ ProfileUpdateLog auto-increment reset to 1');
    
    await prisma.$executeRaw`ALTER TABLE Subscription AUTO_INCREMENT = 1`;
    console.log('‚úÖ Subscription auto-increment reset to 1');
    
    await prisma.$executeRaw`ALTER TABLE PricingPlan AUTO_INCREMENT = 1`;
    console.log('‚úÖ PricingPlan auto-increment reset to 1');
    
    await prisma.$executeRaw`ALTER TABLE Payment AUTO_INCREMENT = 1`;
    console.log('‚úÖ Payment auto-increment reset to 1');

    console.log('\nüìä Database Status:');
    console.log('‚úÖ All data cleared (except AdminUser)');
    console.log('‚úÖ All auto-increment counters reset to 1');
    console.log('‚úÖ AdminUser table preserved');
    
    console.log('\nüéâ Complete database reset successful!');
    console.log('All tables now start with ID 1 for new records.');

  } catch (error) {
    console.error('‚ùå Error during database reset:', error);
  } finally {
    await prisma.$disconnect();
  }
}

resetAllTableIds(); 